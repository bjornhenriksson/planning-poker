<div class="container">
  {{#if showLink}}
    <h3>Share this url with your colleagues:</h3>
    <form>
      <input id="sharelink" type="text" value="">
    </form>
    
    <br>

    <a id="add" href="#">Add your vote</a>

    <script>
      let linkForm = document.querySelector('#sharelink');
      linkForm.value = window.location.href.replace(/\?.+/, '');
      document.querySelector('#add').setAttribute('href', window.location.href.replace(/\?.+/, ''));
      linkForm.addEventListener('click', function() {
        linkForm.select();
      });
    </script>
  {{else}}
    <form id="name">
      <input type="text" placeholder="Enter your name">
      <input type="submit">
    </form>

    <div class="poll">
      <h1>{{room.name}}</h1>
      <h3>Estimate how complex this task is by clicking on an option below.</h3>

      <p><i>The higher the number, the more complex the task is to complete.</i></p>
      <div class="options"></div>
      <p><i class="totalVotes"></i></p>
    </div>
  {{/if}}
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
  var socket = io();
  var loaded = false;
  var pollContainer = document.querySelector('.poll');
  var optionsContainer = document.querySelector('.options');
  var room = '{{room.slug}}';
  var user = '';

  let form = document.querySelector('#name');
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    user = form.querySelector('input[type="text"]').value;
    form.remove();
    socket.emit('join', room);
    pollContainer.style.display = 'block';
  });

  function init(room) {
    loaded = true;
    room.scoreboard.options.forEach(function(option) {
      let el = document.createElement('div');
      el.className = 'options__column';
      el.innerHTML = '<div class="option__background"></div>' + '<div class="option__score">' + option.score + '</div>' + '<div class="voters"></div>'
      el.dataset.id = option.id;
      optionsContainer.appendChild(el);

      el.addEventListener("click", function() {
        socket.emit('vote', {room: {slug: room.slug}, optionId: option.id, user: user});
      }, false);
    });
  }
  
  socket.on('roomData', function(room) {
    if (!loaded) {
      init(room);
    }
  });

  socket.on('updated', function(totalVotes, options) {
    options.forEach(function(option) {
      let el = document.querySelector('.options__column[data-id="' + option.id + '"]');
      let backgroundPosition = 100 - option.users.length / totalVotes * 100;
      
      el.querySelector('.option__background').style.transform = 'translateX(-' + backgroundPosition + '%)';
      el.querySelector('.voters').innerHTML = option.users.join(', ');
    });

    if (totalVotes > 1) {
      document.querySelector('.totalVotes').innerHTML = totalVotes + ' votes in total';
    }
  });
</script>